datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum CallStatus {
  INITIATED
  ANSWERED
  NO_ANSWER
  BUSY
  FAILED
}

enum TaskCallEvent {
  CREATED
  CONFIRMED
}

model User {
  id           String            @id @default(uuid())
  createdAt    DateTime          @default(now())
  tasks        Task[]
  calls        Call[]
  callSchedule UserCallSchedule?
}

model Call {
  id        String     @id @default(uuid())
  startTime DateTime
  endTime   DateTime?
  createdAt DateTime   @default(now())
  status    CallStatus
  userId    String
  user      User       @relation(fields: [userId], references: [id])
  taskCalls TaskCall[]
}

model Task {
  id          String     @id @default(uuid())
  description String
  createdAt   DateTime   @default(now())
  completed   Boolean    @default(false)
  userId      String
  user        User       @relation(fields: [userId], references: [id])
  taskCalls   TaskCall[]
}

model TaskCall {
  callId    String
  taskId    String
  eventType TaskCallEvent

  call Call @relation(fields: [callId], references: [id])
  task Task @relation(fields: [taskId], references: [id])

  @@id([callId, taskId, eventType])
}

model UserCallSchedule {
  id                      String   @id @default(uuid())
  userId                  String   @unique
  taskCreationCallTimeUTC DateTime @db.Time
  taskConfirmCallTimeUTC  DateTime @db.Time
  callTimeZone            String
  createdAt               DateTime @default(now())
  updatedAt               DateTime @updatedAt

  user User @relation(fields: [userId], references: [id])
}
